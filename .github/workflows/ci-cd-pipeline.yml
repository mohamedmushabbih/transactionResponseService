name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'

      - name: Build with Maven
        run: mvn clean install

      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jar-file
          path: target/*.jar

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'

      - name: Run integration tests
        run: mvn verify

  package:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'

      - name: Package application
        run: mvn package

      - name: Upload packaged artifact
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: target/*.jar

  deploy-to-dev:
    runs-on: ubuntu-latest
    needs: package

    steps:
      - name: Download package artifact
        uses: actions/download-artifact@v4
        with:
          name: package

      - name: Deploy to Development
        run: |
          scp -i ${{ secrets.DEV_SSH_KEY }} target/*.jar user@dev-server:/path/to/deploy
          ssh -i ${{ secrets.DEV_SSH_KEY }} user@dev-server 'bash /path/to/deploy/deploy.sh'

  deploy-to-staging:
    runs-on: ubuntu-latest
    needs: deploy-to-dev
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download package artifact
        uses: actions/download-artifact@v4
        with:
          name: package

      - name: Deploy to Staging
        run: |
          scp -i ${{ secrets.STAGING_SSH_KEY }} target/*.jar user@staging-server:/path/to/deploy
          ssh -i ${{ secrets.STAGING_SSH_KEY }} user@staging-server 'bash /path/to/deploy/deploy.sh'

  deploy-to-prod:
    runs-on: ubuntu-latest
    needs: deploy-to-staging
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Download package artifact
        uses: actions/download-artifact@v4
        with:
          name: package

      - name: Deploy to Production
        run: |
          scp -i ${{ secrets.PROD_SSH_KEY }} target/*.jar user@prod-server:/path/to/deploy
          ssh -i ${{ secrets.PROD_SSH_KEY }} user@prod-server 'bash /path/to/deploy/deploy.sh'
